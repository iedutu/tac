<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: types.proto

namespace GPBMetadata;

class Types
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        $pool->internalAddGeneratedFile(
            '
ë
types.protoRohel"Ã
Request

id (
operator (	

originator (
client (	
	from_city (	
from_address (	
to_city (	

to_address (	
loading_date	 (
unloading_date
 (
description (	
collies (	
weight (
volume (
loading_meters (
freight (
instructions (	

acceptance (

expiration (
plate_number (	
ameta (	

order_type (	
adr (	
	recipient (
status (
accepted_by (
creation_date (
update_date (

dimensions (	
package (	"ž
RequestUpdates

id (
operator (

originator (
client (
	from_city (
from_address (
to_city (

to_address (
loading_date	 (
unloading_date
 (
description (
collies (
weight (
volume (
loading_meters (
freight (
instructions (

acceptance (

expiration (
plate_number (
ameta (

order_type (
adr (
	recipient (
status (
accepted_by (

dimensions (
package ("å
Truck

id (
operator (	

originator (
	recipient (
accepted_by (
status (
	from_city (	
from_address (	
loading_date	 (
unloading_date
 (
availability (

acceptance (

expiration (
details (	
freight (
plate_number (	
ameta (	

cargo_type (	

truck_type (	
contract_type (	
adr (	
stop (2.Rohel.TruckStop
creation_date (
update_date ("Ö

TruckMatch

id (
operator (	
status (
	from_city (	
availability (
plate_number (	
ameta (	

order_type (	
adr	 (	
	item_date
 (
item_id (
	item_kind (	
loading_meters (
weight (
volume (
to_city (	
originator_id (
recipient_id (" 
TruckUpdates

id (
operator (

originator (
	recipient (
accepted_by (
status (
	from_city (
from_address (
loading_date	 (
unloading_date
 (
availability (

acceptance (

expiration (
details (
freight (
plate_number (
ameta (

cargo_type (

truck_type (
contract_type (
adr ("Ü
	TruckStop

id (
city (	
address (	
cmr (
loading_meters (
weight (
volume (
stop_id (
truck_id (
creation_date	 (
update_date
 (
operator (	"®
User

id (
username (	
password (	
class (
insert (
reports (
name (	
office	 (	

country_id
 (
country_name (	"£
Notification

id (
from (	
kind (
entity_kind (
	entity_id (
url (	
user_id (
originator_id (
viewed	 ("L
	CargoNote

id (
cargo_id (
operator_id (
note (	bproto3'
        , true);

        static::$is_initialized = true;
    }
}

